name: Build PORTX Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch all history so we can access all files
        fetch-depth: 0
        lfs: true
    
    - name: Checkout LFS objects
      run: git lfs checkout
    
    - name: Read version
      id: version
      run: |
        VERSION=$(cat VERSION | tr -d '\n\r')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "ARCHIVE_NAME=portx-$VERSION" >> $GITHUB_OUTPUT
        echo "Building PORTX version: $VERSION"
    
    - name: Create PORTX distribution
      run: |
        # Create a clean copy without git and CI files
        mkdir -p dist
        
        # Copy all files except excluded ones (preserve permissions)
        rsync -av --exclude='.git' --exclude='.github' --exclude='.claude' \
          --exclude='*.zip' --exclude='Makefile' --exclude='build.ps1' \
          --exclude='build.bat' --exclude='dist' . dist/
        
        # Set executable permissions for binary files
        find dist/bin-ext -name "*.exe" -exec chmod +x {} \; 2>/dev/null || true
        find dist/bin-tools -name "*.exe" -exec chmod +x {} \; 2>/dev/null || true
        find dist/bin -name "*" -type f -exec chmod +x {} \; 2>/dev/null || true
        find dist/cmd -name "*.cmd" -exec chmod +x {} \; 2>/dev/null || true
        find dist/mingw64/bin -name "*.exe" -exec chmod +x {} \; 2>/dev/null || true
        find dist/usr/bin -name "*.exe" -exec chmod +x {} \; 2>/dev/null || true
        
        # Create the zip archive with proper compression
        cd dist
        zip -r -9 "../${{ steps.version.outputs.ARCHIVE_NAME }}.zip" . \
          -x "*.git*" "*.github*" || echo "Some files may have been skipped"
        cd ..
        
        # Show archive info
        ls -lh "${{ steps.version.outputs.ARCHIVE_NAME }}.zip" || echo "Archive created but listing failed"
        echo "Archive created: ${{ steps.version.outputs.ARCHIVE_NAME }}.zip"
    
    - name: Upload PORTX artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.version.outputs.ARCHIVE_NAME }}
        path: ${{ steps.version.outputs.ARCHIVE_NAME }}.zip
        retention-days: 30
    
    - name: Create/Update GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: PORTX v${{ steps.version.outputs.VERSION }}
        files: ${{ steps.version.outputs.ARCHIVE_NAME }}.zip
        body: |
          ## PORTX v${{ steps.version.outputs.VERSION }}
          
          **Automated build from latest main branch**
          
          ðŸ“¦ **Download:** `${{ steps.version.outputs.ARCHIVE_NAME }}.zip`
          
          ðŸ”„ **Built from commit:** ${{ github.sha }}
          
          ðŸ“… **Build date:** ${{ github.event.head_commit.timestamp }}
          
          ---
          
          This release is automatically updated on every push to main branch.
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}